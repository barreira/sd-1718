/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;

/**
 *
 * @author rafae
 */
public class PlayerPage extends javax.swing.JFrame {

    private final OverwatchStub client;
    private final Player player;
    private PlayerPanel playerPanel;
    private MatchPanel matchPanel;
    
    
    
    public PlayerPage(OverwatchStub client, Player player) {
        this.client = client;
        this.player = this.client.get(player.getUsername(), player.getPassword());
        
        initComponents();
        this.styleComponents();
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        gameMenu = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(45, 54, 76));

        gameMenu.setBackground(new java.awt.Color(88, 144, 255));
        gameMenu.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        gameMenu.setForeground(new java.awt.Color(255, 255, 255));
        gameMenu.setText("Game");
        gameMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        gameMenu.setContentAreaFilled(false);
        gameMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gameMenu.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gameMenu.setOpaque(true);
        gameMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gameMenuMouseClicked(evt);
            }
        });

        mainPanel.setBackground(new java.awt.Color(45, 54, 76));
        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        mainPanel.setMinimumSize(new java.awt.Dimension(548, 700));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        logoutButton.setBackground(new java.awt.Color(45, 54, 76));
        logoutButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Logout");
        logoutButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        logoutButton.setContentAreaFilled(false);
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.setOpaque(true);
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });

        playButton.setBackground(new java.awt.Color(45, 54, 76));
        playButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        playButton.setForeground(new java.awt.Color(255, 255, 255));
        playButton.setText("Play");
        playButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        playButton.setContentAreaFilled(false);
        playButton.setOpaque(true);
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gameMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(gameMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        client.logout();
        HomeFrame h = new HomeFrame(client);
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutButtonMouseClicked

    
    private void gameMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gameMenuMouseClicked
        gameMenu.setBackground(Color.decode(ThemeColors.BLUE_COLOR));
        playButton.setBackground(Color.decode(ThemeColors.DARK_COLOR));
        matchPanel.setVisible(false);
        playerPanel.setVisible(true);
    }//GEN-LAST:event_gameMenuMouseClicked

    private void playButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseClicked
        gameMenu.setBackground(Color.decode(ThemeColors.DARK_COLOR));
        playButton.setBackground(Color.decode(ThemeColors.BLUE_COLOR));
        matchPanel.setVisible(true);
        playerPanel.setVisible(false);
        
        if (!matchPanel.matchStarted()) {
            client.play();
        }
    }//GEN-LAST:event_playButtonMouseClicked

   
    
    
    private void styleComponents() {
        this.getContentPane()
                .setBackground(Color.decode(ThemeColors.DARK_COLOR));
        
        mainPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        
        c.anchor = GridBagConstraints.CENTER;
        c.gridx = 0;
    
        
        playerPanel = new PlayerPanel(client, player);
        matchPanel = new MatchPanel(client, player);
        
        
        c.gridx = 0;
        c.gridy = 0;
       
        mainPanel.add(playerPanel, c);
        mainPanel.add(matchPanel, c);
        playerPanel.setVisible(true);
        matchPanel.setVisible(false);
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gameMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton playButton;
    // End of variables declaration//GEN-END:variables
}
